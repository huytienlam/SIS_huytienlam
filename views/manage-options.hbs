<div class="container">
    <h1>Cài đặt thông tin</h1>

    <div class="manage-options">
        <div class="option-group">
            <h3>Khoa</h3>
            <ul id="facultyList"></ul>
            <button class="search-button" onclick="addItem('faculty')">Thêm Khoa</button>
        </div>

        <div class="option-group">
            <h3>Chương trình</h3>
            <ul id="programList"></ul>
            <button class="search-button" onclick="addItem('program')">Thêm Chương trình</button>
        </div>

        <div class="option-group">
            <h3>Trạng thái</h3>
            <ul id="statusList"></ul>
            <button class="search-button" onclick="addItem('status')">Thêm Trạng thái</button>
        </div>
    </div>

    <button class="search-button" onclick="saveChanges()">Lưu thay đổi</button>
</div>

<!-- Modal thông báo -->
<div id="messageModal" class="modal">
  <div class="modal-content">
    <p style="margin-bottom: 1em" id="modalText"></p>
    <button class="update-delete-button" id="closeModal">Đóng</button>
  </div>
</div>

<script>
function showModal(message) {
    let modal = document.getElementById("messageModal");
    let modalText = document.getElementById("modalText");
    modalText.textContent = message;
    modal.style.display = "block";
}

document.getElementById("closeModal").addEventListener("click", function() {
    document.getElementById("messageModal").style.display = "none";
    window.location.href = "/"; // Điều hướng về trang chủ, thay đổi URL nếu cần
});
</script>

<script>
async function loadOptions() {
    let response = await fetch("/options");
    let data = await response.json();

    function renderList(id, items) {
        let list = document.getElementById(id + "List");
        list.innerHTML = items.map((item, index) => 
            `<li>
                <input class="option-group-ul" type="text" value="${item}" id="${id}-${index}">
                <button class="update-delete-button" onclick="removeItem('${id}', ${index})">Xóa</button>
            </li>`).join("");
    }

    renderList("faculty", data.faculties);
    renderList("program", data.programs);
    renderList("status", data.statuses);
}

function addItem(category) {
    let list = document.getElementById(category + "List");
    let index = list.children.length;
    let newItem = `<li>
        <input class="option-group-ul" type="text" id="${category}-${index}">
        <button class="update-delete-button" onclick="removeItem('${category}', ${index})">Xóa</button>
    </li>`;
    list.insertAdjacentHTML("beforeend", newItem);
}

function removeItem(category, index) {
    document.getElementById(category + "List").children[index].remove();
}

async function saveChanges() {
    let getValues = (id) => [...document.querySelectorAll(`#${id}List input`)].map(input => input.value.trim()).filter(Boolean);

    let data = {
        faculties: getValues("faculty"),
        programs: getValues("program"),
        statuses: getValues("status"),
    };

    try {
        let response = await fetch("/update-options", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(data),
        });
        let result = await response.json();
        if (result.success) {
            showModal("Cập nhật thành công!");
        } else {
            showModal("Cập nhật thất bại!");
        }
    } catch (error) {
        console.error("Lỗi khi cập nhật danh sách:", error);
        showModal("Có lỗi xảy ra, vui lòng thử lại!");
    }
}

// Gọi hàm khi trang tải
document.addEventListener("DOMContentLoaded", loadOptions);
</script>